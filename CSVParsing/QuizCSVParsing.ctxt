#BlueJ class context
comment0.target=QuizCSVParsing
comment1.params=currRecord\ coldestTempRecord
comment1.target=org.apache.commons.csv.CSVRecord\ colderTempRecord(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment10.params=parser
comment10.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment11.params=
comment11.target=void\ testLowestHumidityInFile()
comment12.params=
comment12.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment13.params=
comment13.target=void\ testLowestHumidityInManyFiles()
comment14.params=parser
comment14.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment15.params=
comment15.target=void\ testAverageTemperatureInFile()
comment16.params=parser\ value
comment16.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment17.params=
comment17.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment18.params=args
comment18.target=void\ main(java.lang.String[])
comment2.params=currRecord\ lowestHumidityRecordinFile
comment2.target=org.apache.commons.csv.CSVRecord\ lowerHumidityRecord(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment3.params=parser
comment3.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment4.params=
comment4.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile()
comment5.params=
comment5.target=void\ testColdestHourInFile()
comment6.params=
comment6.target=org.apache.commons.csv.CSVRecord\ coldestHourInMultipleFiles()
comment7.params=
comment7.target=void\ testColdestHourInMultipleFiles()
comment8.params=
comment8.target=java.lang.String\ fileWithColdestTemperature()
comment9.params=
comment9.target=void\ testFileWithColdestTemperature()
numComments=19
